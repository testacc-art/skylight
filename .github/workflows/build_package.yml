# This is a basic workflow to help you get started with Actions
name: Compile sms.zip
# Controls when the workflow will run
on:  
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      # You can use PyPy versions in python-version.
      # For example, pypy2 and pypy3
      fail-fast: false
      matrix:
        python-version: [ 3.7 ]
        os: [ windows-latest, macos-latest, ubuntu-latest ]
        
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      # setup python
      - name: Set up Python ${{ matrix.python-version }}
        uses: dmitry-shibanov/setup-python@v-dmshib/prepare-cache-support
        with:
          python-version: ${{ matrix.python-version }}
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'
          cache: pipenv
          cache-dependency-path: |
            Pipfile.lock
            Pipfile
      - run: node -e "console.log(process.env['VIRTUAL_ENV'])"
      - name: Install Pipenv
        run: |
          echo "Installing Pipenv"
          python -m pip install --upgrade pip setuptools wheel pipenv
      - run: node -e "console.log(process.env['VIRTUAL_ENV'])"
      - name: Install dependencies
        run: |
          pipenv install
      - run: node -e "console.log(process.env['VIRTUAL_ENV'])"
      - run: pipenv --where
      - run: pipenv --venv
      - run: pipenv run which python
          
